create view store_amazon_eur as
select account,
	   marketplace,
	   event_date,
	   transaction_type,
	   sku,
	   short_name,
	   type,
	   sum(
		   case
		        when item_type = 'Application' then units
		   end
	   ) as installs,
	   sum(
		   case
		        when item_type = 'In-App' then units
		   end
	   ) as purchases,
	   sum(sales) as sales,
	   sum(earnings) as earnings
from (
		SELECT account, 
			   marketplace,  
			   date(transaction_time) as event_date, 
			   transaction_type, 
			   uniq_sku.sku,
			   CASE
		        	WHEN f.short_name is null then (string_to_array(uniq_sku.title, '.'::text))[1]
		        	ELSE f.short_name
		       END AS short_name,
		       CASE
		            WHEN uniq_sku.sku = ANY (ARRAY['com.dominigames.vwfleshboundgoog'::text, 'com.dominigames.helostparadisegoog'::text, 'com.dominigames.dmflorentineelegygoog'::text, 'com.avexgames.bigadventuretriptoeurope'::text]) THEN 'eipix'::character varying
		            WHEN uniq_sku.sku = 'com.dominigames.mf'::text THEN 'hub'::character varying
		            WHEN uniq_sku.sku = 'com.dominigames.magicland'::text THEN 'magicland'::character varying
		            when uniq_sku.sku LIKE '%.free2play%'::text then 'f2p'::character varying
		            WHEN f.type::text = 'free'::text THEN 'f2p'::character varying
		            ELSE 'prem'::character varying
		       END AS type,
			   item_type, 
			   case 
			   		when transaction_type = 'Refund' then units * -1
			   		else units
			   end as units, 
			   marketplace_currency, 
			   case 
			   		when transaction_type = 'Refund' then ("sales_price_(marketplace_currency)" / e.rate) * -1:: numeric(10, 2)
			   		else ("sales_price_(marketplace_currency)" / e.rate):: numeric(10, 2)
			   end as sales,
			   ("estimated_earnings_(marketplace_currency)" / e.rate)::numeric(10, 2) as earnings
		FROM amazon_store_sales a
		left join (SELECT er.event_date,
        				  er.currency,
       					  er.rate / eur.rate AS rate
       			   FROM exchange_rates er
         		   JOIN (SELECT exchange_rates.event_date,
                				 exchange_rates.rate
               			 FROM exchange_rates
              			 WHERE exchange_rates.currency = 'EUR'::text) eur USING (event_date)) as e 
             on date(transaction_time) = e.event_date and marketplace_currency = e.currency
		left join (SELECT title, min(vendor_sku) as sku
				   FROM public.amazon_store_sales
				   where item_type = 'Application'
				   group by title) as uniq_sku on a.title = uniq_sku.title
		left join firebase_full_names f on uniq_sku.sku = f.app_id::text
) as sub
group by account, marketplace, event_date, transaction_type, sku, short_name, type, item_type